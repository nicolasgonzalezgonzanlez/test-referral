/**
 * Required modules
 */
const { axiosInstance } = require("../request");
const axios = axiosInstance();

/**
 * Defining services
 */

/**
 * @func getParsedAddressService
 * @description The service takes care of sending a request to BHUB to parse the address object provided by google
 *
 * @param {Object} jsonGoogle It's the response object we get when we ask google for an address.
 *
 * @return {Object} Returns Buffer
 */
const getParsedAddressService = async (params, address) => {
  try {
    //Extract values.
    const { baseUri, appId, deviceId, token } = params;

    const url = `${baseUri}/address/reverse-external-geolocation`;

    //Prepare the headers.
    const options = {
      headers: {
        "Content-Type": "application/json",
        applicationId: appId,
        deviceId: deviceId,
        accessToken: token,
      },
    };
    
    const { ExternalGeolocationData: { data } } = address
    data.geometry.location_type = 'ROOFTOP';

    //Parse googlemap response format to op.
    const body = {
      provider: "GoogleMap",
      data: {
        results: [data || {}],
        status: "OK",
      },
    };

    //Make the request.
    const response = await axios.post(url, body, options);

    return response;
  } catch (error) {
    throw error;
  }
};

/**
 * Export Services
 */

module.exports = {
  getParsedAddressService,
};
